name: train_model
on:
  push:
    branches:
      - main
jobs:
  verify_sources:
    name: Verify sources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout sources
      - uses: actions/setup-python@v2
        name: Configure Python
      - name: Lint sources
        run: |
          pip install bandit
          bandit -r src/
  run_tests:
    name: Run unit-tests
    runs-on: ubuntu-latest
    needs: [verify_sources]
    steps:
      - uses: actions/checkout@v3
        name: Checkout sources
      - uses: actions/setup-python@v2
        name: Configure Python
      - name: Run tests 
        run: |
          # Install runtime requirements
          pip install -r requirements.txt

          # Install test requirements
          pip install pytest

          # Run unit-tests
          python -m pytest
  train_model:
    name: Train model
    runs-on: ubuntu-latest
    environment: dev
    needs: [run_tests]
    steps:
      - uses: actions/checkout@v3
        name: Checkout sources
      - uses: actions/setup-python@v2
        name: Configure Python
      - uses: iterative/setup-cml@v1
        name: Configure CML Tooling
      - uses: iterative/setup-dvc@v1
        name: Configure DVC Tooling
      - name: Run training script
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |
          # Install the python requirements
          pip install -r requirements.txt

          # Pull the data and reproduce the experiment
          dvc pull
          dvc repro

          # Report metrics
          git fetch --prune --unshallow
          dvc metrics diff main --show-md >> report.md

          # Send report as a comment
          cml send-github-check report.md 
